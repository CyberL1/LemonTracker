@using Microsoft.AspNetCore.Components.Forms
@using LemonTracker.Models
@inject IJSRuntime JsRuntime
@inject HttpClient Http
@inject IModuleConverter Converter
@page "/"

<div class="flex flex-col gap-6">
    <EditorMenu>
        <Button>
            New Track
        </Button>
        <Button OnClickCallback="@(() => JsRuntime.InvokeVoidAsync("clickHiddenPicker"))">
            Load Module
        </Button>
    </EditorMenu>
    <ModuleEditor CurrentModule="@Module" />
</div>

<InputFile id="picker" OnChange="@LoadModule" hidden/>

@code {
    [Parameter]
    public Module? Module { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (Module is not null)
        {
            await base.OnInitializedAsync();
        }
        
        var demoTrack = 
            await Http.GetStreamAsync("demo/2019_MmcM_Conversions.vt2");
        
        Module = Converter.ConvertToLemonModule(demoTrack);

        await base.OnInitializedAsync();
    }

    private async Task LoadModule(InputFileChangeEventArgs arg)
    {
        var ms = new MemoryStream();
        await arg.File.OpenReadStream().CopyToAsync(ms);
        Module = Converter.ConvertToLemonModule(ms);
    }
}